"What is DevOps?","Principally a culture (but also a practice) that aims at unifying software development and operation. Emphasis is placed on collaboration between developers and other IT teams and automating the full software deployment workflow."
"How is DevOps different from Agile?","Agile is focused on developing software. DevOps takes that further to include deployment, support, monitoring, automation, and goes beyond just the team of developers."
"What are the advantages of DevOps?","DevOps aims at shorter development cycles, increased deployment frequency, and more dependable releases, in close alignment with business objectives."
"What are the key components of DevOps?","Continuous Integration<br>Continuous Testing<br>Continuous Delivery<br>Continuous Monitoring"
"What is continuous integration?","Merging changes back into the main branch as often as possible so they can be automatically built and tested."
"What is continuous delivery?","An extension of continuous integration where the release process is automated and new builds can be done quickly."
"What is continuous deployment?","Takes continuous delivery one step further, where the entire software deployment process is automated."
"What are some of the top DevOps tools?","Version control (git)<br>CI/CD (Jenkins, GoCD)<br>Testing (Selenium)<br>Configuration management (Ansible)<br>Monitoring (Nagios)<br>Log aggregation (Splunk)<br>Container infrastructure (Docker, Kubernetes)"
"What is version control?","A system that records changes to a file or set of files over time so that you can recall specific versions later. It can be distributed (Git) or centralized (SVN)."
"What are some of the different types of software testing?","Unit<br>Functional<br>Integration<br>Load<br>Acceptance<br>Sanity"
"What is configuration management?","A process for ensuring consistency among assets in an operational environment."
"What is Infrastructure as Code?","Managing infrastructure (servers, network, etc) through definition files rather than manual configuration. Much like configuration management, this enables automation, consistency, and is self-documenting."
"What is a container?","An application packaged together with its dependencies that runs on top of an OS in an isolated instance and uses the kernel from the host OS."
"How do containers compare to VMs?","Containers have smaller size, faster start time, faster provisioning, faster performance. Containers cannot run on a different host OS."
