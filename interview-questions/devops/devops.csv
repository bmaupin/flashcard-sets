"What is DevOps?","A <b>culture</b> that aims at unifying development and operations<br>Better <b>collaboration</b> between developers and other teams<br>Strong emphasis on <b>automation</b> (continuous integration, testing, delivery, deployment, monitoring)"
"How is DevOps different from Agile?","Agile is focused on developing software. DevOps takes that further to include deployment, support, monitoring, etc, and goes beyond just the team of developers. DevOps arose because Agile was such a success it put a strain on related processes and teams."
"What are the advantages of DevOps?","More frequent deployments<br>Faster recoveries<br>Faster fixes<br>Lower rate of failure"
"What is continuous integration?","Merging changes back into the main branch as often as possible so they can be automatically built and tested."
"What is continuous delivery?","An extension of continuous integration where the release process is automated and new builds can be done quickly."
"What is continuous deployment?","Takes continuous delivery one step further, where the entire software deployment process is automated."
"What are the stages of DevOps?","Plan<br>Create<br>Verify<br>Package<br>Release<br>Configure<br>Monitor"
"What are some of the top DevOps tools?","Version control (git)<br>CI/CD (Jenkins, GoCD)<br>Testing (Selenium)<br>Configuration management (Ansible)<br>Monitoring (Nagios)<br>Log aggregation (Splunk)<br>Container infrastructure (Docker, Kubernetes)"
"What is version control?","A system that records changes to a file or set of files over time so that you can recall specific versions later. It can be distributed (Git) or centralized (SVN)."
"What are some of the different types of software testing?","Unit<br>Functional<br>Integration<br>Load<br>Acceptance<br>Sanity<br>Regression"
"What is configuration management?","A process for ensuring consistency among assets in an operational environment."
"What is Infrastructure as Code?","Managing infrastructure (servers, network, etc) through definition files rather than manual configuration. Much like configuration management, this enables automation, consistency, and is self-documenting."
"How does Infrastructure as Code compare with configuration management?","There is a lot of overlap, but IaC is focused more on:<br>Provisioning (vs configuring)<br>Immutable infrastructure<br>Declarative syntax (vs procedural)<br>Cloud<br>Containers"
"What is a container?","An application packaged together with its dependencies that runs on top of an OS in an isolated instance and uses the kernel from the host OS."
"How do containers compare to VMs?","Containers have smaller size, faster start time, faster provisioning, faster performance. Containers cannot run on a different host OS."
"What experience do you have with automation and continuous integration/deployment?","Be sure to think of specific examples and projects, ideally with measurable results."
